<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>动物园</title>
  
  <subtitle>愿你始终保持信念,满怀热情,拥抱无限可能.</subtitle>
  <link href="https://zedc1ang.github.io/atom.xml" rel="self"/>
  
  <link href="https://zedc1ang.github.io/"/>
  <updated>2022-04-04T05:00:51.452Z</updated>
  <id>https://zedc1ang.github.io/</id>
  
  <author>
    <name>Sorrymaker</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>程序设计入门——c语言 第7周编程练习</title>
    <link href="https://zedc1ang.github.io/2022/04/04/%E7%AC%AC7%E5%91%A8%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    <id>https://zedc1ang.github.io/2022/04/04/%E7%AC%AC7%E5%91%A8%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/</id>
    <published>2022-04-04T04:46:18.000Z</published>
    <updated>2022-04-04T05:00:51.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="多项式加法-5分"><a href="#多项式加法-5分" class="headerlink" title="多项式加法(5分)"></a>多项式加法(5分)</h1><p><a href="https://zedc1ang.github.io/2022/04/04/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E5%8A%A0%E6%B3%95/">题解(点击查看)</a></p><h1 id="鞍数-5分"><a href="#鞍数-5分" class="headerlink" title="鞍数(5分)"></a>鞍数(5分)</h1><p><span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLzIwMjIvMDQvMDQvJUU5JTlFJThEJUU3JTgyJUI5Lw==">题解(点击查看)<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;多项式加法-5分&quot;&gt;&lt;a href=&quot;#多项式加法-5分&quot; class=&quot;headerlink&quot; title=&quot;多项式加法(5分)&quot;&gt;&lt;/a&gt;多项式加法(5分)&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://zedc1ang.github.io/2022/04/</summary>
      
    
    
    
    <category term="程序设计入门-C语言" scheme="https://zedc1ang.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8-C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="题解" scheme="https://zedc1ang.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="C/C++" scheme="https://zedc1ang.github.io/tags/C-C/"/>
    
    <category term="基础语法" scheme="https://zedc1ang.github.io/tags/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
    <category term="浙江大学MOOC" scheme="https://zedc1ang.github.io/tags/%E6%B5%99%E6%B1%9F%E5%A4%A7%E5%AD%A6MOOC/"/>
    
    <category term="翁恺" scheme="https://zedc1ang.github.io/tags/%E7%BF%81%E6%81%BA/"/>
    
    <category term="第七周" scheme="https://zedc1ang.github.io/tags/%E7%AC%AC%E4%B8%83%E5%91%A8/"/>
    
  </entry>
  
  <entry>
    <title>鞍点</title>
    <link href="https://zedc1ang.github.io/2022/04/04/%E9%9E%8D%E7%82%B9/"/>
    <id>https://zedc1ang.github.io/2022/04/04/%E9%9E%8D%E7%82%B9/</id>
    <published>2022-04-04T04:41:02.000Z</published>
    <updated>2022-04-04T04:44:48.275Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目内容"><a href="#题目内容" class="headerlink" title="题目内容:"></a>题目内容:</h2><p>给定一个n*n矩阵A。矩阵A的鞍点是一个位置（i，j），在该位置上的元素是第i行上的最大数，第j列上的最小数。一个矩阵A也可能没有鞍点。</p><p>你的任务是找出A的鞍点。</p><span id="more"></span><hr><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入的第1行是一个正整数n, （1&lt;&#x3D;n&lt;&#x3D;100），然后有n行，每一行有n个整数，同一行上两个整数之间有一个或多个空格。</p><hr><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>对输入的矩阵，如果找到鞍点，就输出其下标。下标为两个数字，第一个数字是行号，第二个数字是列号，均从0开始计数。</p><p>如果找不到，就输出</p><p>NO</p><p>题目所给的数据保证了不会出现多个鞍点。</p><hr><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 </span><br><span class="line">1 7 4 1 </span><br><span class="line">4 8 3 6 </span><br><span class="line">1 6 1 2 </span><br><span class="line">0 7 8 9</span><br></pre></td></tr></table></figure><hr><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 1</span><br></pre></td></tr></table></figure><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码:"></a>我的代码:</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int a[100][100];</span><br><span class="line">int n;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">int i,j;</span><br><span class="line">for (i = 0; i &lt; n; i++)</span><br><span class="line">for (j = 0; j &lt; n; j++)</span><br><span class="line">scanf(&quot;%d&quot;,&amp;a[i][j]);</span><br><span class="line">int max,min,hang1,hang2,lie;</span><br><span class="line">int flag = 0;</span><br><span class="line">for (i = 0; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">max = a[i][0];</span><br><span class="line">for (j = 0; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line">if (a[i][j] &gt;= max)</span><br><span class="line">&#123;</span><br><span class="line">max = a[i][j];</span><br><span class="line">hang1 = i;</span><br><span class="line">lie = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">min = a[0][lie];</span><br><span class="line">int k;</span><br><span class="line">for (k = 0; k &lt; n; k++)</span><br><span class="line">&#123;</span><br><span class="line">if (a[k][lie] &lt;= min)</span><br><span class="line">&#123;</span><br><span class="line">min = a[k][lie];</span><br><span class="line">hang2 = k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (hang1 == hang2)</span><br><span class="line">&#123;</span><br><span class="line">flag = 1;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (flag == 0)</span><br><span class="line">printf(&quot;NO&quot;);</span><br><span class="line">else</span><br><span class="line">printf(&quot;%d %d&quot;, hang1, lie);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目内容&quot;&gt;&lt;a href=&quot;#题目内容&quot; class=&quot;headerlink&quot; title=&quot;题目内容:&quot;&gt;&lt;/a&gt;题目内容:&lt;/h2&gt;&lt;p&gt;给定一个n*n矩阵A。矩阵A的鞍点是一个位置（i，j），在该位置上的元素是第i行上的最大数，第j列上的最小数。一个矩阵A也可能没有鞍点。&lt;/p&gt;
&lt;p&gt;你的任务是找出A的鞍点。&lt;/p&gt;</summary>
    
    
    
    <category term="程序设计入门-C语言" scheme="https://zedc1ang.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8-C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="题解" scheme="https://zedc1ang.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="C/C++" scheme="https://zedc1ang.github.io/tags/C-C/"/>
    
    <category term="基础语法" scheme="https://zedc1ang.github.io/tags/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
    <category term="浙江大学MOOC" scheme="https://zedc1ang.github.io/tags/%E6%B5%99%E6%B1%9F%E5%A4%A7%E5%AD%A6MOOC/"/>
    
    <category term="翁恺" scheme="https://zedc1ang.github.io/tags/%E7%BF%81%E6%81%BA/"/>
    
    <category term="第七周" scheme="https://zedc1ang.github.io/tags/%E7%AC%AC%E4%B8%83%E5%91%A8/"/>
    
  </entry>
  
  <entry>
    <title>多项式加法</title>
    <link href="https://zedc1ang.github.io/2022/04/04/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E5%8A%A0%E6%B3%95/"/>
    <id>https://zedc1ang.github.io/2022/04/04/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E5%8A%A0%E6%B3%95/</id>
    <published>2022-04-04T03:56:45.000Z</published>
    <updated>2022-04-04T04:21:00.145Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目内容"><a href="#题目内容" class="headerlink" title="题目内容:"></a>题目内容:</h2><p>一个多项式可以表达为x的各次幂与系数乘积的和，比如：</p><p>2x6+3x5+12x3+6x+20</p><p>现在，你的程序要读入两个多项式，然后输出这两个多项式的和，也就是把对应的幂上的系数相加然后输出。</p><p>程序要处理的幂最大为100。</p><span id="more"></span><hr><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>总共要输入两个多项式，每个多项式的输入格式如下：</p><p>每行输入两个数字，第一个表示幂次，第二个表示该幂次的系数，所有的系数都是整数。第一行一定是最高幂，最后一行一定是0次幂。</p><p>注意第一行和最后一行之间不一定按照幂次降低顺序排列；如果某个幂次的系数为0，就不出现在输入数据中了；0次幂的系数为0时还是会出现在输入数据中。</p><hr><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>从最高幂开始依次降到0幂，如：</p><p>2x6+3x5+12x3-6x+20</p><p>注意其中的x是小写字母x，而且所有的符号之间都没有空格，如果某个幂的系数为0则不需要有那项。 </p><hr><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6 2</span><br><span class="line">5 3</span><br><span class="line">3 12</span><br><span class="line">1 6</span><br><span class="line">0 20</span><br><span class="line">6 2</span><br><span class="line">5 3</span><br><span class="line">2 12</span><br><span class="line">1 6</span><br><span class="line">0 20</span><br></pre></td></tr></table></figure><hr><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4x6+6x5+12x3+12x2+12x+40</span><br></pre></td></tr></table></figure><hr><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码:"></a>我的代码:</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int list[101] = &#123;0&#125;; // 创建数组并初始化为0 </span><br><span class="line">int count = 0; // 统计输入的第几个数组</span><br><span class="line">int index; // 幂数 </span><br><span class="line">int value; // 系数  </span><br><span class="line">// 把输入的多项式相加 </span><br><span class="line">do&#123;</span><br><span class="line">scanf(&quot;%d&quot;, &amp;index); // 输入幂数</span><br><span class="line">scanf(&quot;%d&quot;, &amp;value); // 输入系数 </span><br><span class="line">list[index] += value; // 相同幂数的系数相加 </span><br><span class="line">if (index == 0) // 结束输入一个多项式条件 </span><br><span class="line">&#123;</span><br><span class="line">count ++; </span><br><span class="line">&#125;</span><br><span class="line">&#125;while(count &lt; 2); // 第二个多项式输入完毕跳出循环 </span><br><span class="line"></span><br><span class="line">int flag = 0; // 为下面循环判断做准备 </span><br><span class="line">int i;</span><br><span class="line">for(i=100;i&gt;=0;i--)</span><br><span class="line">&#123;</span><br><span class="line">if (list[i] != 0) // 系数不为0进入循环 </span><br><span class="line">&#123;</span><br><span class="line">if (flag == 1 &amp;&amp; list[i] &gt; 0) //非正数第一项带加号 正数第一次循环不带加号 </span><br><span class="line">printf(&quot;+&quot;);</span><br><span class="line">flag = 1; // 保证第一次循环后上方的加号可以启用</span><br><span class="line">if (i == 0) //幂数为0 直接输出系数 </span><br><span class="line">printf(&quot;%d&quot;, list[i]);</span><br><span class="line">if (i == 1 &amp;&amp; list[i] != 1) // 幂数为1系数不为1 只输出系数+x </span><br><span class="line">printf(&quot;%dx&quot;, list[i]);</span><br><span class="line">if (i != 1 &amp;&amp; list[i] == 1) // 幂数不为1系数为1 只输出x+幂数 </span><br><span class="line">printf(&quot;x%d&quot;, i);</span><br><span class="line">if (i == 1 &amp;&amp; list[i] == 1) // 幂数和系数都为1  只输出x</span><br><span class="line">printf(&quot;x&quot;);</span><br><span class="line">if  (i &gt; 1 &amp;&amp; list[i] != 1) // 常规情况 输出系数+x+幂数 </span><br><span class="line">printf(&quot;%dx%d&quot;, list[i], i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (flag == 0) // 如果输入全为0 输出0 </span><br><span class="line">printf(&quot;0&quot;);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目内容&quot;&gt;&lt;a href=&quot;#题目内容&quot; class=&quot;headerlink&quot; title=&quot;题目内容:&quot;&gt;&lt;/a&gt;题目内容:&lt;/h2&gt;&lt;p&gt;一个多项式可以表达为x的各次幂与系数乘积的和，比如：&lt;/p&gt;
&lt;p&gt;2x6+3x5+12x3+6x+20&lt;/p&gt;
&lt;p&gt;现在，你的程序要读入两个多项式，然后输出这两个多项式的和，也就是把对应的幂上的系数相加然后输出。&lt;/p&gt;
&lt;p&gt;程序要处理的幂最大为100。&lt;/p&gt;</summary>
    
    
    
    <category term="程序设计入门-C语言" scheme="https://zedc1ang.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8-C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="题解" scheme="https://zedc1ang.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="C/C++" scheme="https://zedc1ang.github.io/tags/C-C/"/>
    
    <category term="基础语法" scheme="https://zedc1ang.github.io/tags/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
    <category term="浙江大学MOOC" scheme="https://zedc1ang.github.io/tags/%E6%B5%99%E6%B1%9F%E5%A4%A7%E5%AD%A6MOOC/"/>
    
    <category term="翁恺" scheme="https://zedc1ang.github.io/tags/%E7%BF%81%E6%81%BA/"/>
    
    <category term="第七周" scheme="https://zedc1ang.github.io/tags/%E7%AC%AC%E4%B8%83%E5%91%A8/"/>
    
  </entry>
  
  <entry>
    <title>社畜教管所</title>
    <link href="https://zedc1ang.github.io/2022/04/01/%E7%A4%BE%E7%95%9C%E6%95%99%E7%AE%A1%E6%89%80/"/>
    <id>https://zedc1ang.github.io/2022/04/01/%E7%A4%BE%E7%95%9C%E6%95%99%E7%AE%A1%E6%89%80/</id>
    <published>2022-04-01T11:27:06.000Z</published>
    <updated>2022-04-01T11:47:03.202Z</updated>
    
    <content type="html"><![CDATA[<h1 id="张骏杰老师开课啦"><a href="#张骏杰老师开课啦" class="headerlink" title="张骏杰老师开课啦"></a>张骏杰老师开课啦</h1><span id="more"></span><h2 id="第一课"><a href="#第一课" class="headerlink" title="第一课"></a>第一课</h2><p>若你自认理性且正确，那便应该心平气和，言之有据地与人交流，即使不能立刻说服对方，但也至少埋下了一颗种子，冷嘲热讽或居高临下的态度，总会加大人与人之间的隔阂，最终只是在自己的小圈子中制造回声。愿我们最终都能成为乐观且包容的人，愿意耐心听取他们人的苦衷和声音。</p><hr><h2 id="第二课"><a href="#第二课" class="headerlink" title="第二课"></a>第二课</h2><p>纽约时间比加州时间早三个小时，但加州时间并没有变慢。有人22岁就毕业了，但等了五年才找到好的工作。有人25岁就当上了CEO，却在50岁去世，也有人迟到50岁才当上CEO，然后活到90岁。有人依然单身，同时也有人已婚。奥巴马55岁就退休，川普70岁才开始当总统，世上每个人本来就有自己的发展时区。身边有些人看似走在你前面，也有人看似走在你后面，但其实每个人在自己的时区有自己的步程。不用嫉妒或嘲笑他们，他们都在自己的时区里，你也是！生命就是等待正确的行动时机，所以放轻松！你没有落后，你没有领先，在命运为你安排的属于自己的时区里，一切都准时。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;张骏杰老师开课啦&quot;&gt;&lt;a href=&quot;#张骏杰老师开课啦&quot; class=&quot;headerlink&quot; title=&quot;张骏杰老师开课啦&quot;&gt;&lt;/a&gt;张骏杰老师开课啦&lt;/h1&gt;</summary>
    
    
    
    <category term="内测人员签到处" scheme="https://zedc1ang.github.io/categories/%E5%86%85%E6%B5%8B%E4%BA%BA%E5%91%98%E7%AD%BE%E5%88%B0%E5%A4%84/"/>
    
    
    <category term="小讲堂" scheme="https://zedc1ang.github.io/tags/%E5%B0%8F%E8%AE%B2%E5%A0%82/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级历年真题题解</title>
    <link href="https://zedc1ang.github.io/2022/03/31/PAT%E4%B9%99%E7%BA%A7/"/>
    <id>https://zedc1ang.github.io/2022/03/31/PAT%E4%B9%99%E7%BA%A7/</id>
    <published>2022-03-31T14:34:55.000Z</published>
    <updated>2022-04-02T07:29:12.825Z</updated>
    
    <content type="html"><![CDATA[<center>2013年秋季-2022年夏季</center><span id="more"></span><h1 id="PAT-乙级-2013年秋季考试"><a href="#PAT-乙级-2013年秋季考试" class="headerlink" title="PAT(乙级)-2013年秋季考试"></a>PAT(乙级)-2013年秋季考试</h1><h2 id="1011-A-B-和-C-15-分"><a href="#1011-A-B-和-C-15-分" class="headerlink" title="1011 A+B 和 C (15 分)"></a>1011 A+B 和 C (15 分)</h2><!--more--><p><span class="exturl" data-url="aHR0cHM6Ly9waW50aWEuY24vcHJvYmxlbS1zZXRzLzk5NDgwNTI2MDIyMzEwMjk3Ni9wcm9ibGVtcy85OTQ4MDUzMTI0MTcwMjE5NTI=">题目导航<i class="fa fa-external-link-alt"></i></span></p><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><ul><li>列表1</li><li>列表2<ul><li>a 子列表1</li><li>b 子列表2</li></ul></li><li>列表3</li></ul><hr><p>PTA</p><hr><p><img src="https://tse1-mm.cn.bing.net/th/id/R-C.4d9cd2e53dddfc238a06e750b73cd023?rik=MsMCKPGumufOyQ&riu=http://www.desktx.com/d/file/wallpaper/scenery/20170209/c2accfe637f86fb6f11949cb8651a09b.jpg&ehk=ia2TVXcow6ygWUVZ1yod5xH4aGd8565SYn6CRpxkNoo=&risl=&pid=ImgRaw&r=0" alt="PAT"></p><p><em>斜体</em><br><strong>加粗</strong></p><p><code>include &lt;stdio.h&gt;</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>引用</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;center&gt;2013年秋季-2022年夏季&lt;/center&gt;</summary>
    
    
    
    <category term="PAT乙级" scheme="https://zedc1ang.github.io/categories/PAT%E4%B9%99%E7%BA%A7/"/>
    
    
    <category term="PAT" scheme="https://zedc1ang.github.io/tags/PAT/"/>
    
    <category term="题解" scheme="https://zedc1ang.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="C/C++" scheme="https://zedc1ang.github.io/tags/C-C/"/>
    
    <category term="基础语法" scheme="https://zedc1ang.github.io/tags/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zedc1ang.github.io/2022/03/31/hello-world/"/>
    <id>https://zedc1ang.github.io/2022/03/31/hello-world/</id>
    <published>2022-03-31T05:28:57.271Z</published>
    <updated>2022-04-01T02:39:55.447Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">Hexo<i class="fa fa-external-link-alt"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv">documentation<i class="fa fa-external-link-alt"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=">troubleshooting<i class="fa fa-external-link-alt"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==">GitHub<i class="fa fa-external-link-alt"></i></span>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s">Writing<i class="fa fa-external-link-alt"></i></span></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=">Server<i class="fa fa-external-link-alt"></i></span></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s">Generating<i class="fa fa-external-link-alt"></i></span></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s">Deployment<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9oZXhvLmlvLw==&quot;&gt;Hexo&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;! This is your very first post. Check &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&quot;&gt;documentation&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&quot;&gt;troubleshooting&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; or you can ask me on &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&quot;&gt;GitHub&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
